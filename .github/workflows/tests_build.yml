name: Tests and Build
on:
  push:
    branches:
      - main
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Iniciando Testes
        run: |
          timedatectl set-timezone ${{ vars.TZ }}
          echo "Iniciando testes em $(date)"
      - name: Checkout
        uses: actions/checkout@v4
      - name: Configurando Ambiente Golang
        uses: actions/setup-go@v5
        with:
          go-version: '>=1.21.0'
      - name: Subindo Banco de Dados
        run: |
          docker run -d --rm --name mongodb \
            -p 27017:27017 \
            mongo:latest
      - name: Realizando Testes
        run: |
          cd ./api
          go test -v ./tests
      - name: Falha nos Testes
        if: failure()
        run: |
          echo "Testes falharam em $(date)"
      - name: Finalizando Testes
        run: |
          echo "Testes finalizados em $(date)"
  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Iniciando Build
        run: |
          timedatectl set-timezone ${{ vars.TZ }}
          echo "Iniciando build em $(date)"
      - name: Checkout
        uses: actions/checkout@v4
      - name: Login Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Configurando Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Construção da Imagem Docker
        id: build_push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ vars.DOCKERHUB_TAG }}:latest
            ${{ vars.DOCKERHUB_TAG }}:v${{ github.run_number }}
          platforms: linux/amd64
          cache-from: type=registry,ref=${{ vars.DOCKERHUB_TAG }}:latest
          cache-to: type=inline
      - name: Finalizando Build
        run: |
          echo "Image digest: ${{ steps.build_push.outputs.digest }}"
          echo "Build finalizado em $(date)"